# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ master ]
  pull_request:
  schedule:
    - cron: '0 10 * * *'

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install gdb
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install gdb
        echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
    - name: Setup lldb
      if: matrix.os == 'macos-latest'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Install dependencies
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Install dependencies on Windows
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        if (Test-Path -Path '.\requirements-dev.txt' -PathType Leaf) {pip install -r requirements-dev.txt}
    - name: Build dist and test with unittest
      if: matrix.os != 'windows-latest'
      run: |
        python setup.py sdist bdist_wheel
        pip install dist/*.whl
        python -m unittest
    - name: Build dist and test with unittest on Windows
      if: matrix.os == 'windows-latest'
      run: |
        python setup.py sdist bdist_wheel
        pip install (Get-ChildItem dist/*.whl)
        python -m unittest
    - name: Generate coverage report
      run: |
        coverage run --source viztracer --parallel-mode -m unittest
        coverage combine
        coverage xml -i
      env:
        COVERAGE_RUN: True
    - name: Upload report to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
